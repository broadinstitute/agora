webservice.scheme = "http"
webservice.host = "localhost"
webservice.port = 8000
webservice.version = "v1"
webservice.interface = 0.0.0.0
instance.name = "reference"

mongodb {
  hosts=["localhost"]
  ports=[27017]
}

mongo.aliasBatchSize = 5000

# path to womtool-as-a-service (WaaS)
waas {
  server = "http://localhost:9001"
}

environment = "local"
mockAuthenticatedUserEmail = "broadprometheustest@gmail.com"
supervisor.logging = false

swagger {
  apiDocs = "api-docs"
  apiVersion = "0.1"
  baseUrl = "/"
  contact = "dsde-engineering@broadinstitute.org"
  description = "Agora stores nethods along with metadata." // TODO!!! More info
  info = "Agora Methods Repository"
  license = "BSD"
  licenseUrl = "http://opensource.org/licenses/BSD-3-Clause"
  swaggerVersion = "1.3"
  termsOfServiceUrl = "http://www.github.com/broadinstitute/agora"
  clientId = "your-client-id"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
}

akka.http.server.idle-timeout = 95 s # Akka default is 60 s
akka.http.server.request-timeout = 65 s # Akka default is 20 s

// Agora needs an associated google-project under which to create GCS objects.
// Create a service account with p12 key associated with this project and record it's info in application.conf on the deployment server.
//gcs.project.id = "my-google-project"
//gcs.service.account.email = "TODO@broadinstitute.org"
//gcs.service.account.p12.key.file = "MyProject.p12"

// Add a SQL database to application.conf

// MySQL example
//sqlDatabase = {
//  profile = "slick.jdbc.MySQLProfile$"
//  db {
//    url = "jdbc:mysql://DB_HOST:DB_PORT/DB_NAME"
//    driver = "com.mysql.jdbc.Driver"
//    user = DB_USER
//    password = DB_PASSWORD
//  }
//}

// H2 example
sqlDatabase = {
  profile = "slick.jdbc.H2Profile$"
  db {
    connectionPool = disabled
    driver = "org.h2.Driver"
    url = "jdbc:h2:file:local"
    keepAliveConnection = true
    user = root
  }
}

sql.aliasBatchSize = 100
