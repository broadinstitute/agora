swagger: '2.0'
info:
  title: Agora API
  description: All of the Green
  version: "1.0.0"
produces:
  - application/json
paths:
  /methods:
    get:
      summary: List methods
      description: |
        The Methods endpoint returns all methods the requester
        has permissions to read that fit the filter criteria.
      parameters:
        - name: namespace
          in: query
          description: Namespace of method.
          required: false
          type: string
        - name: name
          in: query
          description: Name of method.
          required: false
          type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of method.
          required: false
          type: number
        - name: synopsis
          in: query
          description: Synopsis of method.
          required: false
          type: string
        - name: documentation
          in: query
          description: Documentation of method.
          required: false
          type: string
        - name: owner
          in: query
          description: Owner of method.
          required: false
          type: string
        - name: payload
          in: query
          description: Payload of method in WDL.
          required: false
          type: string
        - name: entityType
          in: query
          description: Type of Method - Task or Workflow
          required: false
          type: string
        - name: excludedFields
          in: query
          description: Fields to exclude in JSON response.
          required: false
          type: string
        - name: includedFields
          in: query
          description: Fields to include in JSON response
          required: false
          type: string
      tags:
        - Methods
      responses:
        200:
          description: An array of methods.
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a Method.
      description: |
        Inserts a method into the method repository and
        gives the owner full access permissions. Must supply a namespace
        name, payload, and entityType. Cannot supply a snapshotId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Agora Entity
          required: false
          schema:
            $ref: '#/definitions/MethodQuery'
      tags:
        - Methods
      responses:
        201:
          description: Method successfully added.
          schema:
              $ref: '#/definitions/MethodResponse'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'
  /methods/{namespace}/{name}/{snapshotId}:
    get:
      summary: Find a single method.
      description: |
        Returns one method that matches the namespace,
        name, and snapshotId.
      parameters:
        - name: namespace
          in: path
          description: Namespace of method.
          required: true
          type: string
        - name: name
          in: path
          description: Name of method.
          required: true
          type: string
        - name: snapshotId
          in: path
          description: Snapshot ID of method.
          required: true
          type: number
        - name: onlyPayload
          in: query
          description: Boolean to return only the payload of the method.
          required: false
          type: string
      tags:
        - Methods
      responses:
        200:
          description: An array of methods.
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /configurations:
    get:
      summary: List configurations
      description: |
        The configurations endpoint returns all configurations the requester
        has permissions to read that fit the filter criteria.
      parameters:
        - name: namespace
          in: query
          description: Namespace of method.
          required: false
          type: string
        - name: name
          in: query
          description: Name of method.
          required: false
          type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of method.
          required: false
          type: number
        - name: synopsis
          in: query
          description: Synopsis of method.
          required: false
          type: string
        - name: documentation
          in: query
          description: Documentation of method.
          required: false
          type: string
        - name: owner
          in: query
          description: Owner of method.
          required: false
          type: string
        - name: payload
          in: query
          description: Payload of method in WDL.
          required: false
          type: string
        - name: entityType
          in: query
          description: Type of Method - Task or Workflow
          required: false
          type: string
        - name: excludedFields
          in: query
          description: Fields to exclude in JSON response.
          required: false
          type: string
        - name: includedFields
          in: query
          description: Fields to include in JSON response
          required: false
          type: string
      tags:
        - Configurations
      responses:
        200:
          description: An array of configurations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a Method.
      description: |
        Inserts a method into the method repository and
        gives the owner full access permissions. Must supply a namespace
        name, payload, and entityType. Cannot supply a snapshotId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Agora Entity
          required: false
          schema:
            $ref: '#/definitions/ConfigurationQuery'
      tags:
        - Configurations
      responses:
        201:
          description: Method successfully added.
          schema:
              $ref: '#/definitions/ConfigurationResponse'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'
  /configurations/{namespace}/{name}/{snapshotId}:
    get:
      summary: Find a single method.
      description: |
        Returns one method that matches the namespace,
        name, and snapshotId.
      parameters:
        - name: namespace
          in: path
          description: Namespace of method.
          required: true
          type: string
        - name: name
          in: path
          description: Name of method.
          required: true
          type: string
        - name: snapshotId
          in: path
          description: Snapshot ID of method.
          required: true
          type: number
      tags:
        - Configurations
      responses:
        200:
          description: An array of configurations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /methods/{namespace}/permissions:
    get:
      summary: List permissions on namespace.
      description: |
        List permissions on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: An array of permissions.
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a permissions on namespace.
      description: |
        Add a permissions on namespace. Will edit if user already has some permission on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Edit a permissions on namespace.
      description: |
        Edit a permissions on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a permission on namespace.
      description: |
        Delete a permission on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email of whom to revoke permissions.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /methods/{namespace}/{name}/{snapshotId}/permissions:
    get:
      summary: List permissions on a specific method.
      description: |
        List permissions on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
      tags:
      	- Permissions
      responses:
        200:
          description: An array of permissions.
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a permissions on a specific method.
      description: |
        Add a permissions on a specific method. Will edit if user already has some permission on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Edit a permissions on a specific method.
      description: |
        Edit a permissions on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a permission on a specific method.
      description: |
        Delete a permission on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email of whom to revoke permissions.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /configurations/{namespace}/permissions:
    get:
      summary: List permissions on namespace.
      description: |
        List permissions on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: An array of permissions.
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a permissions on namespace.
      description: |
        Add a permissions on namespace. Will edit if user already has some permission on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Edit a permissions on namespace.
      description: |
        Edit a permissions on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a permission on namespace.
      description: |
        Delete a permission on namespace.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: user
          in: query
          description: User's email of whom to revoke permissions.
          required: true
          type: string
      tags:
      	- NamespacePermissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /configurations/{namespace}/{name}/{snapshotId}/permissions:
    get:
      summary: List permissions on a specific method.
      description: |
        List permissions on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
      tags:
      	- Permissions
      responses:
        200:
          description: An array of permissions.
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a permissions on a specific method.
      description: |
        Add a permissions on a specific method. Will edit if user already has some permission on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Edit a permissions on a specific method.
      description: |
        Edit a permissions on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email.
          required: true
          type: string
        - name: roles
          in: query
          description: List of comma seperated roles -- i.e. Read,Write,Create,Redact,Manage or "All" or "Nothing". NO SPACES.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a permission on a specific method.
      description: |
        Delete a permission on a specific method.
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          type: string
        - name: name
          in: path
          description: Name
          required: true
          type: string
        - name: snapshotId
          in: path
          description: SnapshotId
          required: true
          type: number
        - name: user
          in: query
          description: User's email of whom to revoke permissions.
          required: true
          type: string
      tags:
      	- Permissions
      responses:
        200:
          description: Access control modified.
          schema:
            $ref: '#/definitions/AccessControl'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  MethodQuery:
    properties:
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: broad-dsde-test
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: |
          task wc { command { cat ${File in_file} | wc -l } output { Int count = read_int(stdout()) }}
      entityType:
        type: string
        description: Tyoe of the AgoraEntity -- Task or Workflow.
        default: Task
  ConfigurationQuery:
    properties:
      namespace:
        type: string
        description: Namespace which contains Configuration.
        default: broad-dsde-test
      name:
        type: string
        description: Name of the Configuration.
        default: quick-BWA-config
      synopsis:
        type: string
        description: Synopsis which contains Configuration.
        default: Quick synopsis of configuration.
      documentation:
        type: string
        description: Documentation of the Configuration.
        default: |
          Example configuraion with an associated method.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: |
          { "methodStoreMethod": { "methodNamespace": "broad-dsde-test", "methodName": "BWA", "methodVersion": 1}}
      entityType:
        type: string
        description: Can only be Configuration.
        default: Configuration
  ConfigurationResponse:
    properties:
      method:
        type: object
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: broad-dsde-test
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: |
          task wc { command { cat ${File in_file} | wc -l } output { Int count = read_int(stdout()) }}
      entityType:
        type: string
        description: Tyoe of the AgoraEntity -- Task or Workflow.
        default: Task
  MethodResponse:
    properties:
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: broad-dsde-test
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: |
          task wc { command { cat ${File in_file} | wc -l } output { Int count = read_int(stdout()) }}
      entityType:
        type: string
        description: Tyoe of the AgoraEntity -- Task or Workflow.
        default: Task
  AccessControl:
    properties:
      user:
        type: string
        description: A user's email.
        default: test-user@broadinstitute.org
      roles:
        type: array
        description: The roles a user has on an entity.
        items:
          type: string
        default: [Read, Write, Manage]
  Error:
    properties:
      code:
        type: integer
        format: int32
        default: 500
      message:
        type: string
        default: Internal Server Error
